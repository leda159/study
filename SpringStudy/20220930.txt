
pom.xml(project object model)
- 스프링을 사용하면서 필요한 jar 파일
  을 설정




lombok 설정
https://mvnrepository.com/

lombok 검색
1.18.12
Maven dependencies 폴더에 자동 다운로드
lombok 컴파일
재부팅
Project > Clean 실행
servlet-context.xml - 웹관련 설정

한글 필터 추가 : web.xml 수정

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

http://localhost:8080/


문제)
1.프로젝트명:board
2.top level package:org.bigdata.board
3.pom.xml 기본설정및 한글 필터 추가
4.views 폴더 밑에 board 폴더생성
5.board 폴더에 list.jsp 생성
6.list.jsp 
  여기는 게시판 리스트 입니다 출력
7.실행 URL
  http://localhost:8080/board/boardList.do
     






http://localhost:8080/board/

http://localhost:8080



ex00 프로젝트를 이용
org.bigdata.sample 패키지 생성
Chef.java 생성
Restaurant.java 생성


org.bigdata.sample 패키지 인식
p58
root-context.xml 수정
namespaces 지정


스프링 테스트 
1.pom.xml 파일에서 테스트 관련 점검
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-test</artifactId>
    <version>${org.springframework-version}</version>
</dependency>
<dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>4.12</version>
	<scope>test</scope>
</dependency>
  
spring-test 검색

src/test/java - 스프링 테스트 폴더
org.bigdata.sample 패키지 생성
p61 SampleTests.java 클래스 생성


Run As > JUnit Test
Junit 탭 생성 - 녹색바 성공
INFO : org.bigdata.sample.SampleTests - Restaurant(chef=Chef(name=null, age=0, phone=null))
INFO : org.bigdata.sample.SampleTests - ---------------------------
INFO : org.bigdata.sample.SampleTests - Chef(name=null, age=0, phone=null)


p69

@Component - 빈등록 자동으로 처리
//@ToString
//@Getter
//@Setter
@Data
//모든 필드를 매개변수로 하는 생성자를 자동으로 생성
@AllArgsConstructor
//기본 생성자를 자동으로 생성
@NoArgsConstructor
//final 혹은 @NonNull로 선언된
//필드를 매개변수로 하는 생성자를 자동으로 생성
@RequiredArgsConstructor
public class SampleHotel{
   
  final String name;
  @NonNull
  public String addr; 
  public String empCnt;

  public SampleHotel(name,addr) {
     this.name = name;
     this.addr = addr;
  }


  public SampleHotel(){
  }

  public SampleHotel(String name){
      this.name = name;
  }

  public SampleHotel(String addr){
      this.addr = addr;
  }

  public SampleHotel(String name,String addr){
     	this.name = name;
        this.addr = addr;
  }

}

p76 오라클 사용자 생성
C:>sqlplus /nolog

SQL> connect /as sysdba
연결되었습니다

SQL> create user book_ex identified by book_ex;
사용자가 생성되었습니다.

SQL> grant dba,resource,connect to book_ex;
권한이 부여되었습니다.

오라클과 연동
ojdbc6.jar 혹은 ojdbc8.jar 필요
D:\sqldeveloper\jdbc\lib
ojdbc8.jar 존재

pom.xml에 추가
<dependency>
    <groupId>com.oracle.database.jdbc</groupId>
    <artifactId>ojdbc8</artifactId>
    <version>19.3.0.0</version>
</dependency>

p81
src/test/java 폴더및에
org.bigdata.persistence 패키지 생성
JDBCTests.java 클래스 코딩

오라클 SID 확인하는 sql문
select instance from v$thread;

INFO : org.bigdata.persistence.JDBCTests - oracle.jdbc.driver.T4CConnection@2462cb01



p83 hikariCP Connection Pool 설정
    pom.xml 수정

    hikariCP 검색

    HikariCP  3.3.1

p84 root-context.xml 수정

p86
src/test/java
org.bigdata.persistence
DataSourceTests.java 클래스 코딩

ex00 프로젝트를 사용
1.org.bigdata.controller 패키지에
  ExamController.java 생성

2.url이 /join 으로 요청이 오면
  join.jsp 실행하도록 Controller 설정
 
http://localhost:8080/join

3.model.addAttribute사용
  아이디:test
  비밀번호:test1234
  이름:홍길동
  연락처:010-1234-5678
  이메일:test@naver.com

  joinResult.jsp가 실행되도록 처리
  
  정상적으로 가입되었습니다 출력

  출력결과
   아이디:XXX
   비밀번호:XXX
   이름:XXX
   연락처:XXX
   이메일:XXX

 http://localhost:8080/join

 http://localhost:8080/joinResult






